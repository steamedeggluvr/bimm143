---
title: "candy-data"
author: "Ann (PID: A16028103)"
format: pdf

---


# 538 candy data: PCA and more

```{r}
candy <- read.csv("candy-data.csv", row.names = 1)
head(candy)
```

**Q1. How many different candy types are in this dataset?**

```{r}
nrow(candy)
```


**Q2. How many fruity candy types are in the dataset?**

```{r}
sum(candy$fruity)
```

What are these fruity candies specifically?
We can use ==

```{r}
rownames ( candy[candy$fruity == 1, ] )
```

## How often does my favorite candy win?

```{r}
candy["Twix", ]$winpercent
```

**Q3. What is your favorite candy in the dataset and what is it’s winpercent value?**
Nestle Crunch

```{r}
candy["Nestle Crunch", ]$winpercent
```

**Q4. What is the winpercent value for “Kit Kat”?**

```{r}
candy["Kit Kat", ]$winpercent
```

**Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?**

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

## New skim function

You can use the :: function if you don't want to download the whole package.
The library will only apply to this code chunk.

```{r}
skimr::skim(candy)
```

**Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?**

The "hist" / `winpercent` column is not numeric; instead it is a visual bar graph from 0-100. 

**Q7. What do you think a zero and one represent for the candy$chocolate column?**

One means that the candy does have chocolate, while zero means that it does not.

## Data analysis

**Q8. Plot a histogram of winpercent values**

```{r}
library(ggplot2)

ggplot(candy, aes(winpercent)) +
  geom_histogram(binwidth = 8, fill = blues9)
```

**Q9. Is the distribution of winpercent values symmetrical?**
No

**Q10. Is the center of the distribution above or below 50%?**

```{r}
mean(candy$winpercent)
```

**Q11. On average is chocolate candy higher or lower ranked than fruit candy?**

```{r}
# Chocolate candy

# Filters, gets row values, calculates mean
mean ( candy$winpercent[as.logical(candy$chocolate)] ) 
```

```{r}
# Fruity candy
mean ( candy$winpercent[as.logical(candy$fruity)] ) 
```

On average, chocolate candy is ranked higher than fruit candy.

**Q12. Is this difference statistically significant?**

```{r}
chocolate <- candy$winpercent[as.logical(candy$chocolate)]
fruity <- candy$winpercent[as.logical(candy$fruity)]

t.test(chocolate, fruity)
```

Yes, the difference is statistically significant.

## Overall candy rankings

Use `sort` to sort vectors.

```{r}
# For example
x <- c(5, 2, 10)

# sort(x, decreasing = TRUE) inverses the sort
sort(x)
```

The buddy function to `sort()` that is often more useful is called `order()`. It returns the "indices" of the input that would result in it being sorted.

```{r}
order(x) # Shows position of sorted values
x[ order(x) ] #Sorted values
```


**Q13. What are the five least liked candy types in this set?**

```{r}
head(candy[order(candy$winpercent),], n=5)
```

**Q14. What are the top 5 all time favorite candy types out of this set?**

```{r}
ord <- order(candy$winpercent, decreasing = TRUE)
head(candy[ord, ], n=5)
```

**Q15. Make a first barplot of candy ranking based on winpercent values.**
**Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?**


```{r}
# Color according to category
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"

ggplot(candy) + aes(winpercent, reorder( rownames(candy), winpercent)) +
  geom_col(fill=my_cols)
```

**Q17. What is the worst ranked chocolate candy?**
Sixlets

**Q18. What is the best ranked fruity candy?**
Starburst

## Looking at pricepercent
What is the best candy for the least money?

```{r}
my_cols[as.logical(candy$fruity)] = "red"
```


```{r}
# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent) +
  geom_point(col=my_cols)
```

Add some labels?

```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text()
```

To deal with overlapping labels, we instal the **ggrepel** package.

```{r}
installed.packages("ggrepel")
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text_repel(max.overlaps = 5, col=my_cols) # Default: 10
```

**Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?**
Reese's Miniatures 

**Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?**
Nik L Nip

## Exploring correlation structure

Pearson correlation goes between -1 and 1, with 0 indicating no correlation. Values close to 1 are considered to be highly correlated. 


```{r}
# install.packages("corrplot")
library("corrplot")

cij <- cor(candy)
corrplot(cij)
```

**Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?**
Chocolate and fruit are anti-correlated.

**Q23. Similarly, what two variables are most positively correlated?**
Chocolate and winpercent are positively correlated.

## Principle Component Analysis 

The base R function for PCA is called `prcomp()` and we can set "scale = TRUE/FALSE".

```{r}
pca <- prcomp( candy, scale = TRUE)
summary(pca)
```

The main result of PCA - ie. the new PC plot (projection of candy on our new PC axis) is contained in `pca$x`. 

```{r}
pc <- as.data.frame(pca$x)

library(ggplot2)
library(ggrepel)

ggplot(pc) + aes(PC1, PC2, label = rownames(pc)) + 
  geom_point(col=my_cols) #+
  # geom_text_repel(max.overlaps = 5)
```
```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

**Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?**
The above barplot visualizes correlation in a different way (horizontal / vertical).
It is another way to view the correlation plot. 



